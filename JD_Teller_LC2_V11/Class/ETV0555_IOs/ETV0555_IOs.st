//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "ETV0555_IOs"
	Revision           = "1.1"
	GUID               = "{CADB2074-0340-4F97-B371-AB8213D28A8E}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	IconPath           = ".\Class\DigInOut.ICO"
	SharedCommandTable = "true"
	Objectsize         = "(426,120)"
	Comment            = "Class to access digital IOs on ETV0555 (8xDigIn, 8xDigOut)">
	<Channels>
	</Channels>
	<RevDoku>
		<Owner Company="Sigmatek" Author="RamAnd"/>
		<Dokumentation Revision="1.1" Date="15.02.2012" Author="RamAnd" Company="Sigmatek" Description="Outputs are only written to hardware, if they have changed."/>
		<Dokumentation Revision="1.0" Date="15.11.2010" Author="BleErn" Company="Sigmatek" Description="Initial version"/>
	</RevDoku>
	<Network Name="ETV0555_IOs">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_base"
				GUID       = "{1BB0D813-6504-4036-BA8F-23EE9D0CD647}"
				Class      = "ETVEdge_DigIO_Base"
				Position   = "(218,120)"
				Visualized = "false"
				CyclicTime = "100 ms">
				<Channels>
					<Server Name="Input1"/>
					<Server Name="Input2"/>
					<Server Name="Input3"/>
					<Server Name="Input4"/>
					<Server Name="Input5"/>
					<Server Name="Input6"/>
					<Server Name="Input7"/>
					<Server Name="Input8"/>
					<Server Name="InputByte"/>
					<Server Name="Output1"/>
					<Server Name="Output2"/>
					<Server Name="Output3"/>
					<Server Name="Output4"/>
					<Server Name="Output5"/>
					<Server Name="Output6"/>
					<Server Name="Output7"/>
					<Server Name="Output8"/>
					<Server Name="OutputByte"/>
					<Server Name="State"/>
					<Client Name="To_HwControl"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.State" Destination="_base.State" Vertices="(832,210),(660,210),"/>
			<Connection Source="this.Input1" Destination="_base.Input1" Vertices="(832,270),(660,270),"/>
			<Connection Source="this.Input2" Destination="_base.Input2" Vertices="(832,330),(660,330),"/>
			<Connection Source="this.Input3" Destination="_base.Input3" Vertices="(832,390),(660,390),"/>
			<Connection Source="this.Input4" Destination="_base.Input4" Vertices="(832,450),(660,450),"/>
			<Connection Source="this.Input5" Destination="_base.Input5" Vertices="(832,510),(660,510),"/>
			<Connection Source="this.Input6" Destination="_base.Input6" Vertices="(832,570),(660,570),"/>
			<Connection Source="this.Input7" Destination="_base.Input7" Vertices="(832,630),(660,630),"/>
			<Connection Source="this.Input8" Destination="_base.Input8" Vertices="(832,690),(660,690),"/>
			<Connection Source="this.Output1" Destination="_base.Output1" Vertices="(832,750),(660,750),"/>
			<Connection Source="this.Output2" Destination="_base.Output2" Vertices="(832,810),(660,810),"/>
			<Connection Source="this.Output3" Destination="_base.Output3" Vertices="(832,870),(660,870),"/>
			<Connection Source="this.Output4" Destination="_base.Output4" Vertices="(832,930),(660,930),"/>
			<Connection Source="this.Output5" Destination="_base.Output5" Vertices="(832,990),(660,990),"/>
			<Connection Source="this.Output6" Destination="_base.Output6" Vertices="(832,1050),(660,1050),"/>
			<Connection Source="this.Output7" Destination="_base.Output7" Vertices="(832,1110),(660,1110),"/>
			<Connection Source="this.Output8" Destination="_base.Output8" Vertices="(832,1170),(660,1170),"/>
			<Connection Source="this.InputByte" Destination="_base.InputByte" Vertices="(832,1230),(660,1230),"/>
			<Connection Source="this.OutputByte" Destination="_base.OutputByte" Vertices="(832,1290),(660,1290),"/>
			<Connection Source="_base.To_HwControl" Destination="this.To_HwControl" Vertices="(218,210),(38,210),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
#pragma using ETVEdge_DigIO_Base

ETV0555_IOs : CLASS
: ETVEdge_DigIO_Base
  //Servers:
  //Clients:
  //Variables:
  //Functions:
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB ETV0555_IOs::@CT_
0$UINT,
2#0100000000000000$UINT, //TY_ETV0555_IOS
1$UINT, 1$UINT, (SIZEOF(::ETV0555_IOs))$UINT, 
0$UINT, 0$UINT, 0$UINT, 
TO_UDINT(1449760976), "ETV0555_IOs", //Class
TO_UDINT(1026138707), "ETVEdge_DigIO_Base", 1$UINT, 3$UINT, //Baseclass
//Servers:
//Clients:
END_FUNCTION


#define USER_CNT_ETV0555_IOs 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_ETV0555_IOs] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION ETV0555_IOs::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
		nCmdSize	: UINT;
	END_VAR

	ret_code	:= ETVEdge_DigIO_Base::@STD();
	IF ret_code <> C_OK THEN
		RETURN;
	END_IF;
	nCmdSize		:= ETVEdge_DigIO_Base::State.pMeth^.nCmds$UINT*SIZEOF(pVoid) + CMDMETH.Init;

	_memcpy((#vmt.CmdTable)$^USINT, ETVEdge_DigIO_Base::State.pMeth, nCmdSize);
	vmt.CmdTable.nCmds		:= nSTDCMD + USER_CNT_ETV0555_IOs;
	ETVEdge_DigIO_Base::State.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ETVEdge_DigIO_Base::State.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION
