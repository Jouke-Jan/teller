//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "BoxGenerator"
	Revision           = "1.0"
	GUID               = "{E0368D07-FC29-429E-9C69-5C523DC4B8D3}"
	RealtimeTask       = "true"
	CyclicTask         = "true"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(570,540)">
	<Channels>
		<Server Name="ClassSvr" GUID="{358F35F8-3497-4B13-9E4E-4587B99C7634}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="DoosLengte" GUID="{66F2DD0C-1111-4B20-B544-36A991E90638}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="GapBetweenBoxes" GUID="{7A7B37BC-0D78-4516-B2E5-8FAC175E438A}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="NrOfHoles" GUID="{EA3B25DA-3277-4A64-AA4B-6F744DF24873}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="OneBox" GUID="{6ABED0E8-AEA8-423F-BF7E-12F8F6E23489}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="OnOff" GUID="{DF040CF6-0314-43C4-96D3-D6888248A191}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="oSpeed" GUID="{27560D1F-9B91-4730-B476-38B0484626F4}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="SensorOut" GUID="{EC8AC672-562E-4534-9EE0-02853DC37A66}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="SimSpeed" GUID="{66036E70-615D-4603-BB51-A78D789C0315}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="TaskOnOff" GUID="{47230AD8-8FFF-4FD4-9500-7485E48DF673}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Client Name="c_SpeedIn" Required="false" Internal="false"/>
		<Client Name="iEncoder" Required="false" Internal="false"/>
		<Client Name="rDooslengte" Required="true" Internal="true"/>
		<Client Name="rGapBetweenBoxes" Required="true" Internal="true"/>
		<Client Name="rNrOfHoles" Required="true" Internal="true"/>
		<Client Name="rOnOff" Required="true" Internal="true"/>
	</Channels>
	<RevDoku>
		<Owner Company="JD" Author="JVD"/>
		<Dokumentation Revision="1.0" Date="2012-07-04" Author="JVD" Company="JD" Description="Taskmanager included"/>
	</RevDoku>
	<Network Name="BoxGenerator">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "rDooslengte"
				GUID       = "{2002ADCC-EDEB-4043-8B23-AE12163C74FB}"
				Class      = "Ram"
				Position   = "(300,630)"
				Visualized = "true">
				<Channels>
					<Server Name="Data"/>
				</Channels>
			</Object>
			<Object
				Name       = "rGapBetweenBoxes"
				GUID       = "{087F3CCB-D659-467F-9D2E-3892FB36F02D}"
				Class      = "Ram"
				Position   = "(300,930)"
				Visualized = "true">
				<Channels>
					<Server Name="Data"/>
				</Channels>
			</Object>
			<Object
				Name       = "rNrOfHoles"
				GUID       = "{30F1986F-AD1D-432D-992B-1E7D81F07E53}"
				Class      = "Ram"
				Position   = "(300,780)"
				Visualized = "true">
				<Channels>
					<Server Name="Data"/>
				</Channels>
			</Object>
			<Object
				Name       = "rOnOff"
				GUID       = "{AFDEDD8D-B6E7-4E2F-9C02-1833C357C99C}"
				Class      = "Ram"
				Position   = "(300,480)"
				Visualized = "true">
				<Channels>
					<Server Name="Data"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.rOnOff" Destination="rOnOff.Data"/>
			<Connection Source="this.rDooslengte" Destination="rDooslengte.Data"/>
			<Connection Source="this.rNrOfHoles" Destination="rNrOfHoles.Data"/>
			<Connection Source="this.rGapBetweenBoxes" Destination="rGapBetweenBoxes.Data"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
BoxGenerator : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
	TaskOnOff 	: SvrCh_DINT;
	oSpeed 	: SvrCh_DINT;
	SensorOut 	: SvrCh_DINT;
	SimSpeed 	: SvrCh_DINT;
	OnOff 	: SvrCh_DINT;
	OneBox 	: SvrCh_DINT;
	DoosLengte 	: SvrCh_DINT;
	NrOfHoles 	: SvrCh_DINT;
	GapBetweenBoxes 	: SvrCh_DINT;
  //Clients:
	iEncoder 	: CltCh_DINT;
	rOnOff 	: CltChCmd_Ram;
	rDooslengte 	: CltChCmd_Ram;
	rNrOfHoles 	: CltChCmd_Ram;
	rGapBetweenBoxes 	: CltChCmd_Ram;
	c_SpeedIn 	: CltCh_DINT;
  //Variables:
		Enc 	: Encoder1;
		BoxLength 	: DINT;
		BoxPart 	: DINT;
		BoxTeller 	: DINT;
		BoxGap 	: DINT;
		CaseOneBox 	: DINT;
		CaseBox 	: DINT;
		change 	: DINT;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION VIRTUAL GLOBAL CyWork
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL RtWork
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL SimSpeed::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL OnOff::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL OneBox::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL DoosLengte::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL NrOfHoles::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL GapBetweenBoxes::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma using Ram


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB BoxGenerator::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_BOXGENERATOR
1$UINT, 0$UINT, (SIZEOF(::BoxGenerator))$UINT, 
10$UINT, 6$UINT, 0$UINT, 
TO_UDINT(547075492), "BoxGenerator", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::BoxGenerator.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
(::BoxGenerator.TaskOnOff.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3088116079), "TaskOnOff", 
(::BoxGenerator.oSpeed.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1906102849), "oSpeed", 
(::BoxGenerator.SensorOut.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(959328089), "SensorOut", 
(::BoxGenerator.SimSpeed.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3801008399), "SimSpeed", 
(::BoxGenerator.OnOff.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(621859152), "OnOff", 
(::BoxGenerator.OneBox.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1703576735), "OneBox", 
(::BoxGenerator.DoosLengte.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2844173371), "DoosLengte", 
(::BoxGenerator.NrOfHoles.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(553664552), "NrOfHoles", 
(::BoxGenerator.GapBetweenBoxes.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(805681718), "GapBetweenBoxes", 
//Clients:
(::BoxGenerator.iEncoder.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(3545101083), "iEncoder", 
(::BoxGenerator.rOnOff.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(330706450), "rOnOff", TO_UDINT(1903583397), "Ram", 1$UINT, 3$UINT, 
(::BoxGenerator.rDooslengte.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(22616388), "rDooslengte", TO_UDINT(1903583397), "Ram", 1$UINT, 3$UINT, 
(::BoxGenerator.rNrOfHoles.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(2573363845), "rNrOfHoles", TO_UDINT(1903583397), "Ram", 1$UINT, 3$UINT, 
(::BoxGenerator.rGapBetweenBoxes.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(1150558083), "rGapBetweenBoxes", TO_UDINT(1903583397), "Ram", 1$UINT, 3$UINT, 
(::BoxGenerator.c_SpeedIn.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(1748431658), "c_SpeedIn", 
END_FUNCTION


#define USER_CNT_BoxGenerator 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_BoxGenerator] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION BoxGenerator::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_BoxGenerator, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Init		:= #Init();
	vmt.CmdTable.CyWork		:= #CyWork();
	vmt.CmdTable.RtWork		:= #RtWork();
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	TaskOnOff.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF TaskOnOff.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	SimSpeed.pMeth			:= StoreMethod( #M_RD_DIRECT(), #SimSpeed::Write() );
	IF SimSpeed.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	OnOff.pMeth			:= StoreMethod( #M_RD_DIRECT(), #OnOff::Write() );
	IF OnOff.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	OneBox.pMeth			:= StoreMethod( #M_RD_DIRECT(), #OneBox::Write() );
	IF OneBox.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	DoosLengte.pMeth			:= StoreMethod( #M_RD_DIRECT(), #DoosLengte::Write() );
	IF DoosLengte.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	NrOfHoles.pMeth			:= StoreMethod( #M_RD_DIRECT(), #NrOfHoles::Write() );
	IF NrOfHoles.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	GapBetweenBoxes.pMeth			:= StoreMethod( #M_RD_DIRECT(), #GapBetweenBoxes::Write() );
	IF GapBetweenBoxes.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL BoxGenerator::Init


if    _FirstScan then

      //encoder settings
      Enc.Multi   := 1000;
      Enc.Divider := 60000*mcres; 
      
      rOnOff  := rOnOff.Read();
      OnOff.Write(input:=rOnOff);
      
      rDoosLengte := rDoosLengte.Read();
      DoosLengte.Write(input:=rDoosLengte);
      
      rNrOfHoles := rNrOfHoles.Read();
      NrOfHoles.Write(input:=rNrOfHoles);
      
      rGapBetweenBoxes := rGapBetweenBoxes.Read();
      GapBetweenBoxes.Write(input:=rGapBetweenBoxes);
      BoxPart := 1;
      
end_if;      
      
      
END_FUNCTION


FUNCTION VIRTUAL GLOBAL BoxGenerator::RtWork
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR

//Als in de machine setup de functie is geselelecteerd wordt de code uitgevoerd
  if  TaskOnOff then 

      //Speed inlezen en omzetten naar een telwaarde
      if SimSpeed = 0 then
         c_SpeedIn := c_SpeedIn.Read();
         iEncoder += c_SpeedIn;
      else
         iEncoder += SimSpeed * MCRES;  
      end_if;

      Enc.EncoderDelta := iEncoder - Enc.EncoderOld;
      Enc.EncoderOld := iEncoder;
      Enc.SpeedDelta := ((Enc.EncoderDelta * encres * enc.Multi) / enc.Divider);

      if     OneBox then
             
             case CaseOneBox of
             0:
                 OnOff.Write(input:=0);  
                 BoxTeller := 0;
                 CaseOneBox += 1;
                 SensorOut := 0;
             1:         
                 BoxTeller += Enc.SpeedDelta;
                 if ((BoxTeller/BoxPart) and 16#0001) then
                    SensorOut := 0;
                 else
                    SensorOut := 1;   
                 end_if;
                 
                 if   BoxTeller > BoxLength then
                      CaseOneBox := 2;
                      SensorOut := 0;
                 end_if;
             2:    
                 OneBox := 0;
                 CaseOneBox :=0;
             end_case;
      end_if;
      
      if     OnOff then
              
             case CaseBox of
             0:
                 OneBox.Write(input:=0); 
                 BoxTeller := 0;
                 CaseBox += 1;
                 SensorOut := 0;         
             1:
                 BoxTeller += Enc.SpeedDelta;
                 if ((BoxTeller/BoxPart) and 16#0001) then
                    SensorOut := 0;
                 else
                    SensorOut := 1;   
                 end_if;
                 
                 if   BoxTeller > BoxLength then
                      CaseBox := 2;
                      SensorOut := 0;
                      BoxTeller := 0;
                 end_if;         
             2:
                 BoxTeller += Enc.SpeedDelta;
                 if   BoxTeller > BoxGap then
                      CaseBox := 0;
                 end_if;               
             end_case;  
      end_if;



  end_if;
  

	state := READY;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL BoxGenerator::CyWork
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR

//Als in de machine setup de functie is geselelecteerd wordt de code uitgevoerd
  if  TaskOnOff then 

      //Snelheidsberekening
      oSpeed := c_SpeedIn/mcres;
      
      if change then
        if  NrOfHoles > 0 then
          BoxPart := (DoosLengte*encres) / ((NrOfHoles * 2) + 1);
          BoxLength := DoosLengte*encres;
          BoxGap := GapBetweenBoxes * encres;
        else   
          BoxLength := DoosLengte*encres;
          BoxPart := BoxLength;   
          BoxGap := GapBetweenBoxes * encres;
        end_if;
        change :=0;
      end_if;  
  
  end_if;
	state := READY;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL BoxGenerator::OnOff::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	OnOff := input;
  if  OnOff < 0 | OnOff > 1 then
      OnOff := 0;  
  end_if;
  SensorOut := 0;
  rOnOff.Write(input:=OnOff);
  
 	result := OnOff;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL BoxGenerator::OneBox::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	OneBox := input;
  if OneBox < 0 | OneBox > 1 then
     OneBox := 0; 
  end_if;  
  SensorOut := 0;
 	result := OneBox;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL BoxGenerator::DoosLengte::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	DoosLengte := input;
  if DoosLengte < 100 then
     DoosLengte := 100;
  elsif DoosLengte > 2000 then
        DoosLengte := 2000;
  end_if;

  rDooslengte.Write(input:=DoosLengte);
  change := 1;
 
 	result := DoosLengte;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL BoxGenerator::NrOfHoles::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	NrOfHoles := input;
  if NrOfHoles < 0 then
     NrOfHoles := 0;
  elsif NrOfHoles > 8 then
        NrOfHoles := 8;
  end_if;
  
  rNrOfHoles.Write(input:=NrOfHoles);
  change := 1;
  
 	result := NrOfHoles;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL BoxGenerator::GapBetweenBoxes::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	GapBetweenBoxes := input;
  if    GapBetweenBoxes < 50 then
        GapBetweenBoxes := 50;
  elsif GapBetweenBoxes > 2000 then
        GapBetweenBoxes := 2000;
  end_if;
  
  rGapBetweenBoxes.Write(input:=GapBetweenBoxes); 
  change := 1;
 	result := GapBetweenBoxes;

END_FUNCTION





FUNCTION VIRTUAL GLOBAL BoxGenerator::SimSpeed::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	SimSpeed := input;
  if  SimSpeed < 0 then
      SimSpeed := 0;
  end_if;

 	result := SimSpeed;

END_FUNCTION
