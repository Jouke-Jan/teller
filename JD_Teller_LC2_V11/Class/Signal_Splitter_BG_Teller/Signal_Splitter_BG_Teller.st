//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "Signal_Splitter_BG_Teller"
	Revision           = "1.0"
	GUID               = "{7D12E5EE-33F1-4D97-917A-239F3D11A652}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "true"
	DefBackground      = "100 ms"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(540,120)">
	<Channels>
		<Server Name="ClassSvr" GUID="{AD5E372F-E342-47C6-A6ED-3FEE1106FEB3}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="WriteValue" GUID="{112C5130-CD59-4BC5-B65A-33796CF891D0}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Client Name="c_WriteValue01" Required="false" Internal="false"/>
	</Channels>
	<RevDoku>
		<Owner Company="JD" Author="SV"/>
		<Dokumentation Revision="0.0" Date="2014-09-04" Author="SV" Company="JD" Description="Kopie van Signal_Splitter_BG ref 0.0. Aangepast tot 1 client."/>
	</RevDoku>
</Class>
*)
Signal_Splitter_BG_Teller : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
	WriteValue 	: SvrCh_DINT;
  //Clients:
	c_WriteValue01 	: CltCh_DINT;
  //Variables:
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Background
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL WriteValue::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB Signal_Splitter_BG_Teller::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_SIGNAL_SPLITTER_BG_TELLER
1$UINT, 0$UINT, (SIZEOF(::Signal_Splitter_BG_Teller))$UINT, 
2$UINT, 1$UINT, 0$UINT, 
TO_UDINT(1060418456), "Signal_Splitter_BG_Teller", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::Signal_Splitter_BG_Teller.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
(::Signal_Splitter_BG_Teller.WriteValue.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1983544979), "WriteValue", 
//Clients:
(::Signal_Splitter_BG_Teller.c_WriteValue01.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(2614908968), "c_WriteValue01", 
END_FUNCTION


#define USER_CNT_Signal_Splitter_BG_Teller 1

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_Signal_Splitter_BG_Teller] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION Signal_Splitter_BG_Teller::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_Signal_Splitter_BG_Teller, pCmd := #vmt.CmdTable);
#pragma warning (disable : 74)
	vmt.UserFcts[0]		:= #Background();

#pragma warning (default : 74)
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	WriteValue.pMeth			:= StoreMethod( #M_RD_DIRECT(), #WriteValue::Write() );
	IF WriteValue.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL Signal_Splitter_BG_Teller::WriteValue::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	WriteValue := input;

  c_WriteValue01.Write (WriteValue);

	result := WriteValue;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL Signal_Splitter_BG_Teller::Background
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR


  WriteValue := c_WriteValue01.Read();


	state := READY;

END_FUNCTION
