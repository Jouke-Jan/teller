//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION
#include <.\lsl_st_pci.h>

(*!
<Class
	Name               = "ETVEdge_DigIO_Base"
	Revision           = "1.3"
	GUID               = "{7B744C9D-3022-4294-9285-647BDC3E1195}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	IconPath           = ".\Class\Tool.ico"
	SharedCommandTable = "true"
	Objectsize         = "(426,120)"
	Comment            = "Class to access digital IOs on Edge Terminals (8xDigIn, 8xDigOut)">
	<Channels>
		<Server Name="Input1" GUID="{116C5D60-561E-4E84-AF30-50A44042AD3D}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Input2" GUID="{BC0174C4-A94D-4D89-96A3-D854CC753CF7}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Input3" GUID="{56573FD2-2CEA-4A7D-9845-118E24FA3FAA}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Input4" GUID="{0E199D75-906F-4106-BE69-8688D966E03A}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Input5" GUID="{49128D49-DE40-421F-B05E-E33E5BF935E3}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Input6" GUID="{2DF22012-5EBC-4907-A1FB-840F38553A9A}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Input7" GUID="{92236421-5BD9-44B1-A568-81B9BF69EB84}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Input8" GUID="{AFE7B773-A12A-40F5-87DD-CCCC9434E5BF}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="InputByte" GUID="{61E8D03D-D700-4D55-84B2-840FF1748BF4}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Output1" GUID="{28CEFE1D-41C2-4CF9-9D8F-98959511B5FF}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Output2" GUID="{1241D0AA-F29B-44F3-AF1E-B09CCB885F50}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Output3" GUID="{1FC193E1-7CB9-4FBA-841C-92F6E9386106}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Output4" GUID="{05FDE19C-4E54-49E6-83FB-846BC8698407}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Output5" GUID="{9C1980FA-F2DE-4941-A795-F36738DD4BC8}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Output6" GUID="{62AFFA3B-A746-459D-9396-90F3C11CDA49}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Output7" GUID="{31B806DF-B976-463D-8F5E-25AB56F3D2EE}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Output8" GUID="{B597B002-984D-4BEE-8B9C-F96C091CB027}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="OutputByte" GUID="{1DFF5E1C-F59F-4CBC-8645-22BB3E84234E}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="State" GUID="{B1227306-B889-42EB-8BE6-C71A386B1341}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment=" 0..Everything is OK&#13;&#10;-1..Failed to initialize OS-Interface&#13;&#10;-2..IO-Device not available&#13;&#10;-3..Failed to login to HwControl"/>
		<Client Name="To_HwControl" Required="true" Internal="false" Comment="Connect to Client &quot;Control&quot; of &quot;HwControl&quot;-Object"/>
	</Channels>
	<Dependencies>
		<Files>
			<File Path=".\lsl_st_pci.h" Include="true"/>
		</Files>
	</Dependencies>
	<RevDoku>
		<Owner Company="Sigmatek" Author="RamAnd"/>
		<Dokumentation Revision="1.3" Date="14.02.2012" Author="RamAnd" Company="Sigmatek" Description="Outputs are only written to hardware, if they have changed."/>
		<Dokumentation Revision="1.2" Date="27.10.2010" Author="RamAnd" Company="Sigmatek" Description="Added RtPostScan support"/>
		<Dokumentation Revision="1.1" Date="16.07.2010" Author="BleErn" Company="Sigmatek" Description="Servers OutputByte/OutputWord are thread-safe now"/>
		<Dokumentation Revision="1.0" Date="26.02.2010" Author="RamAnd" Company="Sigmatek" Description="Initial version"/>
	</RevDoku>
</Class>
*)
ETVEdge_DigIO_Base : CLASS
	TYPE
	  t_outs : BSINT
	  [
	    1 Supply5VEnable_n,
	    2 LVDSDriverEnable,
	    3 DisplayEnable,
	    4 DisplayBacklightEnable,
	    5 DisplayPowerOn,
	  ];
#pragma pack(push, 1)
	  DigIOs : STRUCT
	    DigOuts : t_outs;
	    DigIns : BSINT
	    [
	    ];
	  END_STRUCT;
#pragma pack(pop)
	END_TYPE
  //Servers:
	State 	: SvrChCmd_DINT;
	Input1 	: SvrCh_DINT;
	Input2 	: SvrCh_DINT;
	Input3 	: SvrCh_DINT;
	Input4 	: SvrCh_DINT;
	Input5 	: SvrCh_DINT;
	Input6 	: SvrCh_DINT;
	Input7 	: SvrCh_DINT;
	Input8 	: SvrCh_DINT;
	Output1 	: SvrCh_DINT;
	Output2 	: SvrCh_DINT;
	Output3 	: SvrCh_DINT;
	Output4 	: SvrCh_DINT;
	Output5 	: SvrCh_DINT;
	Output6 	: SvrCh_DINT;
	Output7 	: SvrCh_DINT;
	Output8 	: SvrCh_DINT;
	InputByte 	: SvrCh_BDINT;
	OutputByte 	: SvrCh_BDINT;
  //Clients:
	To_HwControl 	: CltChCmd_HwControl;
  //Variables:
		pDigs 	: ^DigIOs;
		Power 	: t_outs;
		pSPCIInfo 	: ^LSL_SPCIINFO;
		OutputByteOld : BDINT
		[
		];

		us_FirstScan 	: USINT;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION VIRTUAL GLOBAL RtWork
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION GLOBAL RtPostScan
		VAR_INPUT
			pThis 	: ^DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL Output1::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL Output2::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL Output3::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL Output4::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL Output5::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL Output6::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL Output7::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL Output8::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL OutputByte::Write
		VAR_INPUT
			input (EAX) 	: BDINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: BDINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma usingLtd HwControl


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB ETVEdge_DigIO_Base::@CT_
0$UINT,
2#0100000000000000$UINT, //TY_ETVEDGE_DIGIO_BASE
1$UINT, 3$UINT, (SIZEOF(::ETVEdge_DigIO_Base))$UINT, 
19$UINT, 1$UINT, 0$UINT, 
TO_UDINT(1026138707), "ETVEdge_DigIO_Base", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::ETVEdge_DigIO_Base.State.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(1422331979), "State", 
(::ETVEdge_DigIO_Base.Input1.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1344628668), "Input1", 
(::ETVEdge_DigIO_Base.Input2.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3375117830), "Input2", 
(::ETVEdge_DigIO_Base.Input3.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3190490768), "Input3", 
(::ETVEdge_DigIO_Base.Input4.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(542085939), "Input4", 
(::ETVEdge_DigIO_Base.Input5.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1464378277), "Input5", 
(::ETVEdge_DigIO_Base.Input6.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3460428319), "Input6", 
(::ETVEdge_DigIO_Base.Input7.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3108422281), "Input7", 
(::ETVEdge_DigIO_Base.Input8.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(704241432), "Input8", 
(::ETVEdge_DigIO_Base.Output1.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2425114930), "Output1", 
(::ETVEdge_DigIO_Base.Output2.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(159711368), "Output2", 
(::ETVEdge_DigIO_Base.Output3.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2122461214), "Output3", 
(::ETVEdge_DigIO_Base.Output4.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3773212093), "Output4", 
(::ETVEdge_DigIO_Base.Output5.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2548143403), "Output5", 
(::ETVEdge_DigIO_Base.Output6.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(250135697), "Output6", 
(::ETVEdge_DigIO_Base.Output7.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2045768711), "Output7", 
(::ETVEdge_DigIO_Base.Output8.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3914394006), "Output8", 
(::ETVEdge_DigIO_Base.InputByte.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2419834899), "InputByte", 
(::ETVEdge_DigIO_Base.OutputByte.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1569094752), "OutputByte", 
//Clients:
(::ETVEdge_DigIO_Base.To_HwControl.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(1012711711), "To_HwControl", TO_UDINT(2471641665), "HwControl", 3$UINT, 0$UINT, 
END_FUNCTION


#define USER_CNT_ETVEdge_DigIO_Base 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_ETVEdge_DigIO_Base] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION ETVEdge_DigIO_Base::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_ETVEdge_DigIO_Base, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Init		:= #Init();
	vmt.CmdTable.RtWork		:= #RtWork();
	State.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF State.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Output1.pMeth			:= StoreMethod( #M_RD_DIRECT(), #Output1::Write() );
	IF Output1.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Output2.pMeth			:= StoreMethod( #M_RD_DIRECT(), #Output2::Write() );
	IF Output2.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Output3.pMeth			:= StoreMethod( #M_RD_DIRECT(), #Output3::Write() );
	IF Output3.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Output4.pMeth			:= StoreMethod( #M_RD_DIRECT(), #Output4::Write() );
	IF Output4.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Output5.pMeth			:= StoreMethod( #M_RD_DIRECT(), #Output5::Write() );
	IF Output5.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Output6.pMeth			:= StoreMethod( #M_RD_DIRECT(), #Output6::Write() );
	IF Output6.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Output7.pMeth			:= StoreMethod( #M_RD_DIRECT(), #Output7::Write() );
	IF Output7.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Output8.pMeth			:= StoreMethod( #M_RD_DIRECT(), #Output8::Write() );
	IF Output8.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	InputByte.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF InputByte.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	OutputByte.pMeth			:= StoreMethod( #M_RD_DIRECT(), #OutputByte::Write() );
	IF OutputByte.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION

FUNCTION VIRTUAL GLOBAL ETVEdge_DigIO_Base::Init
  VAR
    SigmaTekDevInfo : ^PCICONFDATA;
  END_VAR

  us_FirstScan += 1;

  if us_FirstScan = 10 then
    IF OS_CILGET("PCICONFIG", #pSPCIInfo) =  SYS_ERR_NONE THEN
      SigmaTekDevInfo := SPCIINFO_FINDDEVICE(0x1221,0);
      IF SigmaTekDevInfo <> NIL THEN
        pDigs$pVoid := SPCIINFO_GETADDRESS(SigmaTekDevInfo);
        if pDigs = NIL then
          State := -2;
        else
          // initialisiation OK => we login to HwControl
          if To_HwControl.AddSpecialHW(pThis:=THIS$pVirtualBase, pRtPostScan:=#RtPostScan()) then
            State := -3;
          end_if;
        end_if;
      else
        State := -2;
      end_if;
    else
      State := -1;
    end_if;
  end_if;
  
END_FUNCTION


FUNCTION VIRTUAL GLOBAL ETVEdge_DigIO_Base::RtWork
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR

  if pDigs <> NIL then   
    // read inputs
    InputByte  := pDigs^.DigIns;
    
    // show inputs on servers
    Input1$UDINT := InputByte AND 1;
    Input2$UDINT := (InputByte SHR 1) AND 1;
    Input3$UDINT := (InputByte SHR 2) AND 1;
    Input4$UDINT := (InputByte SHR 3) AND 1;
    Input5$UDINT := (InputByte SHR 4) AND 1;
    Input6$UDINT := (InputByte SHR 5) AND 1;
    Input7$UDINT := (InputByte SHR 6) AND 1;
    Input8$UDINT := (InputByte SHR 7) AND 1;    
  end_if;

	state := READY;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL ETVEdge_DigIO_Base::Output1::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

 	result := input;
  
  if input then
    OutputByte := OutputByte OR 2#00000001;
    Output1 := 1;
  else
    OutputByte := OutputByte AND 2#11111110;
    Output1 := 0;
  end_if;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL ETVEdge_DigIO_Base::Output2::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

 	result := input;
  
  if input then
    OutputByte := OutputByte OR 2#00000010;
    Output2 := 1;
  else
    OutputByte := OutputByte AND 2#11111101;
    Output2 := 0;
  end_if;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL ETVEdge_DigIO_Base::Output3::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

 	result := input;
  
  if input then
    OutputByte := OutputByte OR 2#00000100;
    Output3 := 1;
  else
    OutputByte := OutputByte AND 2#11111011;
    Output3 := 0;
  end_if;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL ETVEdge_DigIO_Base::Output4::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

 	result := input;
  
  if input then
    OutputByte := OutputByte OR 2#00001000;
    Output4 := 1;
  else
    OutputByte := OutputByte AND 2#11110111;
    Output4 := 0;
  end_if;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL ETVEdge_DigIO_Base::Output5::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

 	result := input;
  
  if input then
    OutputByte := OutputByte OR 2#00010000;
    Output5 := 1;
  else
    OutputByte := OutputByte AND 2#11101111;
    Output5 := 0;
  end_if;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL ETVEdge_DigIO_Base::Output6::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

 	result := input;
  
  if input then
    OutputByte := OutputByte OR 2#00100000;
    Output6 := 1;
  else
    OutputByte := OutputByte AND 2#11011111;
    Output6 := 0;
  end_if;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL ETVEdge_DigIO_Base::Output7::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

 	result := input;
  
  if input then
    OutputByte := OutputByte OR 2#01000000;
    Output7 := 1;
  else
    OutputByte := OutputByte AND 2#10111111;
    Output7 := 0;
  end_if;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL ETVEdge_DigIO_Base::Output8::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

 	result := input;
  
  if input then
    OutputByte := OutputByte OR 2#10000000;
    Output8 := 1;
  else
    OutputByte := OutputByte AND 2#01111111;
    Output8 := 0;
  end_if;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL ETVEdge_DigIO_Base::OutputByte::Write
	VAR_INPUT
		input (EAX) 	: BDINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: BDINT;
	END_VAR

	result := OutputByte := input;

  // show outputs on servers
  Output1$UDINT := input AND 1;
  Output2$UDINT := (input SHR 1) AND 1;
  Output3$UDINT := (input SHR 2) AND 1;
  Output4$UDINT := (input SHR 3) AND 1;
  Output5$UDINT := (input SHR 4) AND 1;
  Output6$UDINT := (input SHR 5) AND 1;
  Output7$UDINT := (input SHR 6) AND 1;
  Output8$UDINT := (input SHR 7) AND 1;    

END_FUNCTION


FUNCTION GLOBAL ETVEdge_DigIO_Base::RtPostScan
	VAR_INPUT
		pThis 	: ^DINT;
	END_VAR

  // we restore our this pointer, because this method is called from hwcontrol
  this$^DINT := pThis;

  if pDigs <> NIL then
    // if they have changed, write the outputs
    IF OutputByte <> OutputByteOld THEN
      pDigs^.DigOuts := OutputByteOld$USINT := OutputByte$usint;
    END_IF;
  end_if;
  
END_FUNCTION
