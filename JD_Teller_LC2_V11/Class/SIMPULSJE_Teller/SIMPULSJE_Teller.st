//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "SIMPULSJE_Teller"
	Revision           = "1.0"
	GUID               = "{71636CB6-C0F7-4D55-8D34-72223603FDFC}"
	RealtimeTask       = "false"
	CyclicTask         = "true"
	DefCyclictime      = "10 ms"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(284,120)">
	<Channels>
		<Server Name="ClassSvr" GUID="{C613A502-A979-4C11-9766-B9ACD4A72FCF}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="SignAaninMs" GUID="{02A98149-2C87-4A5B-8400-0A677A59D409}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="SignUitinMs" GUID="{A1B7171A-CAE2-456E-B73C-BB814CE3A9E5}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="TaskOnOff" GUID="{B76028C0-CD97-49DF-AE68-FB0BCA34B4D5}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Uitgang" GUID="{EFF21B91-8EBB-4391-A4F9-B16DD0513788}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
	</Channels>
	<RevDoku>
		<Owner Company="JD" Author="SV"/>
		<Dokumentation Revision="1.0" Date="2014-09-23" Author="SV" Company="JD" Description="Kopie van SIMPULSJE. TaskOnOff in init op 1 gezet."/>
	</RevDoku>
</Class>
*)
SIMPULSJE_Teller : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
	TaskOnOff 	: SvrCh_DINT;
	Uitgang 	: SvrCh_DINT;
	SignAaninMs 	: SvrCh_UDINT;
	SignUitinMs 	: SvrCh_UDINT;
  //Clients:
  //Variables:
		timer1 	: DINT;
		timer2 	: UDINT;
		timer3 	: UDINT;
		timer4 	: UDINT;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION VIRTUAL GLOBAL CyWork
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL RtWork
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB SIMPULSJE_Teller::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_SIMPULSJE_TELLER
1$UINT, 0$UINT, (SIZEOF(::SIMPULSJE_Teller))$UINT, 
5$UINT, 0$UINT, 0$UINT, 
TO_UDINT(1018833242), "SIMPULSJE_Teller", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::SIMPULSJE_Teller.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
(::SIMPULSJE_Teller.TaskOnOff.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3088116079), "TaskOnOff", 
(::SIMPULSJE_Teller.Uitgang.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(4170979850), "Uitgang", 
(::SIMPULSJE_Teller.SignAaninMs.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2223398885), "SignAaninMs", 
(::SIMPULSJE_Teller.SignUitinMs.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3507808886), "SignUitinMs", 
//Clients:
END_FUNCTION


#define USER_CNT_SIMPULSJE_Teller 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_SIMPULSJE_Teller] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION SIMPULSJE_Teller::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_SIMPULSJE_Teller, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Init		:= #Init();
	vmt.CmdTable.CyWork		:= #CyWork();
	vmt.CmdTable.RtWork		:= #RtWork();
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	TaskOnOff.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF TaskOnOff.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	SignAaninMs.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF SignAaninMs.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	SignUitinMs.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF SignUitinMs.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION



FUNCTION VIRTUAL GLOBAL SIMPULSJE_Teller::Init



timer1:=0;
SignAaninMs:=250;
SignAaninMs.Write(input:=SignAaninMs);
SignUitinMs:=500;
SignUitinMs.Write(input:=SignUitinMs);

if TaskOnOff = 0 then
 TaskOnOff :=1;
end_if;



END_FUNCTION







FUNCTION VIRTUAL GLOBAL SIMPULSJE_Teller::CyWork
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR

//Als in de machine setup de functie is geselelecteerd wordt de code uitgevoerd
  if  TaskOnOff then 
  
      case timer1 of

      0:

            timer2:=ops.tAbsolute;
            timer1+=1;
            Uitgang:=1;
            Uitgang.Write(Uitgang);
      1:

            if (ops.tAbsolute - timer2) > SignAaninMs then
            timer1+=1;
            end_if;

      2:
            timer2:=ops.tAbsolute;
            timer1+=1;
            Uitgang:=0;
            Uitgang.Write(Uitgang);

      3:

            if (ops.tAbsolute-timer2) > SignuitinMs then
            timer1:=0;
            end_if;

      end_case;

  end_if;
  
	state := READY;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL SIMPULSJE_Teller::RtWork
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR

	state := READY;

END_FUNCTION
