//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "Reference"
	Revision           = "1.20"
	GUID               = "{C1CA6B40-21F1-11D5-90C4-006063018AE8}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(284,120)">
	<Channels>
		<Server Name="RefInput" GUID="{C1CA6B41-21F1-11D5-90C4-006063018AE8}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
	</Channels>
	<RevDoku>
		<Owner Company="Sigmatek"/>
		<Dokumentation Revision="1.20" Date="2011-02-21" Author="FuchsH" Company="Sigmatek" Description="New comment"/>
		<Dokumentation Revision="1.10" Date="08.04.2010" Author="RauAnd" Company="Sigmatek" Description="Updating of the clients, server and methods documentation"/>
		<Dokumentation Revision="1.1" Company="Sigmatek" Description="Creation"/>
	</RevDoku>
</Class>
*)
Reference : CLASS
  //Servers:
	RefInput 	: SvrChCmd_DINT;
  //Clients:
  //Variables:
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL control
		VAR_INPUT
			Mode 	: RefMode;
			RefState 	: ^AxisRef;
			Pos 	: ^DINT;
			StartRef 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL WriteConstant
		VAR_INPUT
			Resolution 	: DINT;			//! <Variable Comment="Internal resolution factor" Name="WriteConstant.Resolution"/>
			Timebase 	: DINT;			//! <Variable Comment="Number of cycles per second" Name="WriteConstant.Timebase"/>
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL StatePtr
		VAR_INPUT
			StatePtr 	: ^CncFlags;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB Reference::@CT_
0$UINT,
2#0100000000000000$UINT, //TY_REFERENCE
1$UINT, 20$UINT, (SIZEOF(::Reference))$UINT, 
1$UINT, 0$UINT, 0$UINT, 
TO_UDINT(3932248060), "Reference", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::Reference.RefInput.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(1414373127), "RefInput", 
//Clients:
END_FUNCTION


#define USER_CNT_Reference 3

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_Reference] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION Reference::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_Reference, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Write		:= #M_WR_DIRECT();
#pragma warning (disable : 74)
	vmt.UserFcts[0]		:= #control();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[1]		:= #WriteConstant();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[2]		:= #StatePtr();

#pragma warning (default : 74)
	RefInput.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF RefInput.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION
//{{LSL_ENCRYPTION 16#800
67C40060F342212FF2412A957A14F9950946A81BF315E88C9B987BDCEF954D19BA7F0ECAC2BA7542416032AFB064D4E1DB5043004AEF0C06DF1DA7721B51F7B33C79B4A6ADCAD9A0ED40A26756A8A69AC916AC516229218629C4FFECE1BA3152BE761F47
17201D3066B4D96E98B1096E304D7E375A8222A772C7BA2DCCE31A9983DB4D56E1C38848292C380EE8103B3549E50D0E52FB6BD5E2387FCBBBBCFCC9D13DA53FB839CBB3E37253D04FBE8E5F75D39759F444B7AAF8DDF64C469F663F6D3BB7DB583CCB42
E6B4C4E7E357E9386A4BC4F74FCAF15E96EF8C94AA18FD8FAA350612617DD6E4D696C5C77CC0011CB754D03B565E316F0D12FCCF4E1C0E9C3A5DA92F6C9E26F6DBE3CBBB0E6035205F0244901FE25B0AB86CC2CE7FE74895F512907753E78FD344AB4F5C
4CF17BA555931898957E3299BC25F8549D75768120DB89C05084F28E581D638F2B6AFC6262B31F9D94F7EA913E8DB8AB84E86EDEDAC8D0149ED44F7C1E2244E95F10C146362D995A2DA4CBBC34FA89414E3BFF050B9C0120F0BF5FCA079459246CE4534D
7C49545A93832FBBBCC2C6DEDD1FAC62C8113ECC5ED7A680F8DD684C8FA754A3B3CC6C0A14908DF5B5FE44B5A1C10F333E146457031BDDE7F987CB15FE28748596FB128F04F91DC37496E8DC8D61F7109F8C8CD4DBEDEE91E4AD9215F028599EB53EA760
87E4C623AFACFAABDE8D9C727567A31F78926CBCBD28307AF17D47697AD8CD0A3C0CCDAF3268AB0662EE660F578D34487971A9819C518514FB18E6F74D8739C9511772B224C9F683D14B0D207E627E36B60F19CB1A97F0999D5070D46372A82CE01CB445
2C05CCC9500F3425D762C55951A5F90A41BA7375F2D82433520643F1723910ACD05A54F1B231454F63DC9C2584809AAC72644C00140F3F22AD3C02C95C87CDD4B5EAC11D8904F8951C21E0FCFF22E97F4B6B757A90A925AEAB9BA158271867DAB38DA953
B7C6AADA933D929881EBD2B918444A50C2A0272BD39387FBEAC0D70709AA6A5471E82D9E0E1A64ACC8082B1D328E6C8FE0996DDF2615C9CFDE262D254609F53B6244FD2B376FE7D51304BD675D2E07C8711267C30EBB8995C1FC0FAB8ABF4C9AD80556A9
F7ED975308F453F520B9BD53C86A4E55