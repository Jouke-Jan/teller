//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "ActScreenWindow"
	Revision           = "0.0"
	GUID               = "{FB9ABD2D-2582-4291-ABB6-666896730CDF}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(410,120)">
	<Channels>
		<Server Name="ActScreenNr" GUID="{AE2C1C90-8BF5-4565-8B8A-5277C593AC58}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="ActWindowNr" GUID="{B6CC2D2E-981E-4354-9A0F-2619D9C49465}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
	</Channels>
	<Network Name="ActScreenWindow">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_base"
				GUID       = "{5769EC6F-B779-4C36-BDC7-92ADED579705}"
				Class      = "_Global"
				Position   = "(218,120)"
				Visualized = "false">
				<Channels>
					<Server Name="Server0"/>
					<Client Name="Lse"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.Server0" Destination="_base.Server0" Vertices="(690,210),(518,210),"/>
			<Connection Source="_base.Lse" Destination="this.Lse" Vertices="(218,210),(38,210),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
#pragma using _Global

ActScreenWindow : CLASS
: _Global
  //Servers:
	ActScreenNr 	: SvrCh_DINT;
	ActWindowNr 	: SvrCh_DINT;
  //Clients:
  //Variables:
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL IF_WindowRun
		VAR_INPUT
			whoami 	: ^_WHOAMI;
			pic 	: ^void;
			event 	: ^_EVENT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB ActScreenWindow::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_ACTSCREENWINDOW
0$UINT, 0$UINT, (SIZEOF(::ActScreenWindow))$UINT, 
2$UINT, 0$UINT, 0$UINT, 
TO_UDINT(3255080645), "ActScreenWindow", //Class
TO_UDINT(3788417926), "_Global", 0$UINT, 12$UINT, //Baseclass
//Servers:
(::ActScreenWindow.ActScreenNr.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1681679496), "ActScreenNr", 
(::ActScreenWindow.ActWindowNr.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1899538167), "ActWindowNr", 
//Clients:
END_FUNCTION


#define USER_CNT_ActScreenWindow 42

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_ActScreenWindow] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION ActScreenWindow::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
		nCmdSize	: UINT;
	END_VAR

	ret_code	:= _Global::@STD();
	IF ret_code <> C_OK THEN
		RETURN;
	END_IF;
	nCmdSize		:= _Global::Server0.pMeth^.nCmds$UINT*SIZEOF(pVoid) + CMDMETH.Init;

	_memcpy((#vmt.CmdTable)$^USINT, _Global::Server0.pMeth, nCmdSize);
	vmt.CmdTable.nCmds		:= nSTDCMD + USER_CNT_ActScreenWindow;
#pragma warning (disable : 74)
	vmt.UserFcts[2]		:= #IF_WindowRun();

#pragma warning (default : 74)
	_Global::Server0.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF _Global::Server0.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL ActScreenWindow::IF_WindowRun
	VAR_INPUT
		whoami 	: ^_WHOAMI;
		pic 	: ^void;
		event 	: ^_EVENT;
	END_VAR

	case whoami^.ima of

	IMA_PICTURE:
		ActScreenNr := to_dint whoami^.no;

	IMA_WINDOW:
		ActWindowNr := to_dint whoami^.no;
	end_case;

END_FUNCTION
