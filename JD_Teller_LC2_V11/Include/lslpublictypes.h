//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
#RE_IN_DE
#pragma define (store)
_SerLib : CLASS_PUBLIC
	TYPE
	  CmdCommand :
	  (
	    StartUserIPR,
	    StopUserIPR,
	    SerCloseIPR,
	    SerSendIPR,
	    RecvCharIPR,
	    SetOnlineIPR,
	    GetRecvStateIPR,
	    GetSendStateIPR,
	    GetErrorIPR,
	    IsInitializedIPR,
	    ClearRecBufferIPR,
	    RtsOnOffIPR,
	    rdRtsIPR,
	    rdCtsIPR,
	    DtrOnOffIPR,
	    rdDtrIPR,
	    rdDcdIPR,
	    rdDsrIPR,
	    rdRiIPR,
	    SetRSModeIPR,
	    GetRSModeIPR,
	    GetInterfaceTypeIPR
	  )$UINT;
	END_TYPE
END_CLASS;
#pragma define (restore)
CNC : CLASS_PUBLIC
#include "..\Class\CNC\CncConstant.h"
#include "..\Class\CNC\CNCTrace.h"
#include <.\lsl_st_systrace.h>
#include "..\Class\CNC\C_Spline.h"
	TYPE
	  CmdControl :
	  (
	    IPRControllerOn,
	    IPRControllerOff,
	    IPRMoveRel,
	    IPRMoveAbs,
	    IPRMoveRef,
	    IPRMoveEndLess,
	    IPRMoveHand,
	    IPRStopMove,
	    IPRCouple,
	    IPRCouplePosition,
	    IPRCoupleDelta,
	    IPRCoupleUser,
	    IPRCoupleGearRel,
	    IPRCoupleGearAbs,
	    IPRCoupleCurve,
	    IPRSetAutoOffset,
	    IPRSetEndSwitch,
	    IPRSetPosition,
	    IPRSetCouplePar,
	    IPRTune,
	    IPRInpos,
	    IPRIntSpeed,
	    IPRIntPosition,
	    IPRExtPosition,
	    IPRCncstat,
	    IPRCntrstat,
	    IPRAutoOffset,
	    IPRRefReady,
	    IPRInposOK,
	    IPRMaster
	  )$UINT;
	END_TYPE
END_CLASS;
#pragma define (restore)
MerkerEx : CLASS_PUBLIC
	TYPE
	  Cmdm_udLength :
	  (
	    GET_DATA_PTR,
	    EXCHANGE_DATA_PTR,
	    SAVE_DATA_TO_RAMEXFILE
	  )$UINT;
	END_TYPE
END_CLASS;
#pragma define (restore)
SafetyCDIAS_Base : CLASS_PUBLIC
#include "..\Class\SafetyCDIAS_Base\SafetyCDIAS_Base.h"
#include <.\lsl_st_safety.h>
#include "..\Class\SafetyManager\SafetyManager.h"
	TYPE
	  FrameTypeType : BSINT
	  [
	    1 Cfg,
	    2 ToP,
	    3 Standard,
	    4 PDO,
	    5 TDO,
	    6 Reserved1,
	    7 Reserved2,
	    8 Response,
	  ];
#pragma pack(push, 1)
	  SDOStdHeader : STRUCT
	    CRC : UDINT;
	    Cmd : USINT;
	    Typ : FrameTypeType;
	    SeqNr : USINT;
	    Len : USINT;
	  END_STRUCT;
#pragma pack(pop)
#pragma pack(push, 1)
	  SDOHeader : STRUCT
	    StdHeader : SDOStdHeader;
	    SrcAdr : HDINT;
	    DstAdr : HDINT;
	    SessId : UDINT;
	  END_STRUCT;
#pragma pack(pop)
	END_TYPE
END_CLASS;
#pragma define (restore)
SdiasBase : CLASS_PUBLIC
#include "..\Class\SdiasManager\SdiasManager.h"
#include <.\lsl_st_hardwaretree.h>
#include "..\Class\SdiasBase\SdiasBase.h"
	TYPE
	  t_b_SdiasFWState : BINT
	  [
	    1 VoltageNotOk,
	    2 NoSync,
	    3 FlashDataCRCError,
	    4 RAMDataCRCError,
	    5 FlashUnsafe,
	  ];
#pragma pack(push, 1)
	  t_s_SdiasFWStateStandard : STRUCT
	    ErrorBits : t_b_SdiasFWState;
	    Reserved : UINT;
	  END_STRUCT;
#pragma pack(pop)
	END_TYPE
END_CLASS;
#pragma define (restore)
#pragma InclDefBlk TanabeCounterSerial
TanabeCounterSerial : CLASS_PUBLIC
	TYPE
#pragma pack(push, 1)
	  TypeW : STRUCT
	    Header : ARRAY [0..3] OF CHAR;
	    DateInput : ARRAY [0..6] OF CHAR;
	    TimeInPut : ARRAY [0..6] OF CHAR;
	    ProductionQuantity : ARRAY [0..6] OF CHAR;
	    BoxLength : ARRAY [0..4] OF CHAR;
	    BattingStart : ARRAY [0..3] OF CHAR;
	    BattingDistance : ARRAY [0..3] OF CHAR;
	    Batch : ARRAY [0..2] OF CHAR;
	    LotNo : ARRAY [0..17] OF CHAR;
	    OperatorName : ARRAY [0..8] OF CHAR;
	    StartingDistanceConveyor : ARRAY [0..4] OF CHAR;
	    AlterationOfActualProduction : ARRAY [0..6] OF CHAR;
	    Terminator : CHAR;
	  END_STRUCT;
#pragma pack(pop)
	END_TYPE
END_CLASS;
#pragma define (restore)
VirtualBaseInit : CLASS_PUBLIC
	TYPE
	  CmdData :
	  (
	    GET_ADD_INFO,
	    READ_DATA,
	    WRITE_DATA,
	    READ_DATA_OFF,
	    WRITE_DATA_OFF
	  )$UINT;
	END_TYPE
END_CLASS;
#pragma define (restore)

#RE_IN_DE
